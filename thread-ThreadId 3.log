[][FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/bugsnag-laravel/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4904"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","96"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3136:3F2C:35DDF4:3A637B:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/closure/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4901"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","99"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","311B:0349:52047F:598B34:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/collision/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4895"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","105"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3100:1596:37C820:3C700C:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/docs/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4889"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","111"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3137:CF67:19650A:1B68DC:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/docsearch-configs/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4902"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","98"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3125:CC6E:55A8C4:5D2D08:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Fastcgi/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4893"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","107"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3106:8F3D:372024:3BADDB:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/laravel-cors/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4897"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","103"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","310D:4B3F:2F7F22:3406F8:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/livewire/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4903"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","97"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3133:CF66:9472C:A22E3:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/nexmo-horizon-demo/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:41 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4888"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","112"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","311C:0349:5204A5:598B5B:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/once/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4890"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","110"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3112:E042:565922:5E3148:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Packages/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4900"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","100"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3104:0343:CA783:DBE7D:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/php-pm/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4891"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","109"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3113:4B40:4FDBF9:57795A:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/sequel-pro/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4892"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","108"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","310A:CF69:5BFC4D:63D423:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/symfony/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4899"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","101"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3107:8F3E:6026D5:685348:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/TrustedProxy/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4894"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","106"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3128:4B3F:2F7F23:3406FA:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/website/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4896"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","104"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3131:CF68:34BE13:392897:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/zttp/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:57:40 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4898"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","102"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3127:CF68:34BE12:392894:60135D84")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"})][FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/bugsnag-laravel/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4879"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","121"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","30BA:4B40:505C39:58068D:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/closure/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4884"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","116"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3076:4B40:505C1E:58066E:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/collision/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4882"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","118"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","30DD:113DE:3733A6:3BD5EB:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/docs/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4877"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","123"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3129:12F02:1817DA:1A2057:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/docsearch-configs/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4886"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","114"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","307F:12F02:1817C9:1A2046:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Fastcgi/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4881"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","119"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3092:CC6E:563491:5DC56C:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/laravel-cors/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4878"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","122"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","30E4:CC6E:563499:5DC576:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/livewire/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4883"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","117"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","30E7:CD88:355957:3A0D5B:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/nexmo-horizon-demo/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4876"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","124"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3123:BC75:30DFA8:353375:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/once/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4885"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","115"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3090:8F3E:60BD2D:68F6D6:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Packages/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4873"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","127"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3124:CC6B:CD2F0:DE92B:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/php-pm/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4880"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","120"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3103:CC6E:563497:5DC572:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/sequel-pro/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4875"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","125"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3116:1597:561658:5DA70E:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/symfony/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4872"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","128"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3130:113DE:3733C9:3BD615:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/TrustedProxy/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4874"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","126"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3121:BC74:5B8858:637536:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/website/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4870"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","130"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","3119:1593:4C5F8:53FA8:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/zttp/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:03 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4871"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","129"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","310E:12F04:5C3BEB:644437:60135DD7")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"})][FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/AI-CS3061/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4863"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","137"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","71FD:E042:5744CC:5F32F9:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Algorithms-and-Data-Structures/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4868"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","132"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","718F:CD89:651344:6D3402:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/AWS-dynamoDB/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4857"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","143"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","715D:DE82:531D1B:5A8901:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Cloud-Encryption/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4862"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","138"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","71B2:4B3D:C5254:D62CA:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/cs-exams/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4861"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","139"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","7149:CC6E:5693F0:5E2CFC:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/CS3011-Symbolic-Programming/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4859"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","141"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","715B:4B3E:18C52B:1B074E:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/CS3016-Functional-Programming/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4866"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","134"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","7169:BC75:3116F4:356F4E:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/CS3071-Compiler-Design/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4864"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","136"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","71EA:DE81:49FD1E:4EB131:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/git-terrogation-graph/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4855"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","145"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","717A:62BC:551A4C:5CA623:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Lowest-common-ancestor/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4858"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","142"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","7182:CD89:651389:6D3449:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/luminaryhub/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4865"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","135"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","71DA:BC73:166119:1853AA:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Python-Client-Gateway-Server/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4867"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","133"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","718D:DE81:49FD16:4EB126:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Weather-app/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 01:00:00 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4854"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","146"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","715C:0349:52EF0A:5A8AEF:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/Web-Proxy-Server/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4856"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","144"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","7195:0345:334731:37CE12:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"}),FailureResponse (Request {requestPath = (BaseUrl {baseUrlScheme = Http, baseUrlHost = "api.github.com", baseUrlPort = 80, baseUrlPath = ""},"/repos/neimhin/World-Vision-CVA-App/contributors"), requestQueryString = fromList [("page",Just "1")], requestBody = Nothing, requestAccept = fromList [application/json;charset=utf-8,application/json], requestHeaders = fromList [("user-agent","haskell-app"),("Authorization","<REDACTED>")]), requestHttpVersion = HTTP/1.1, requestMethod = "GET"} (Response {responseStatusCode = Status {statusCode = 404, statusMessage = "Not Found"}, responseHeaders = fromList [("Date","Fri, 29 Jan 2021 00:59:59 GMT"),("Content-Type","application/json; charset=utf-8"),("Transfer-Encoding","chunked"),("Server","GitHub.com"),("Status","404 Not Found"),("X-OAuth-Scopes","admin:enterprise, admin:gpg_key, admin:org, admin:org_hook, admin:public_key, admin:repo_hook, delete:packages, delete_repo, gist, notifications, repo, user, workflow, write:discussion, write:packages"),("X-Accepted-OAuth-Scopes","repo"),("X-GitHub-Media-Type","github.v3"),("X-RateLimit-Limit","5000"),("X-RateLimit-Remaining","4860"),("X-RateLimit-Reset","1611884447"),("x-ratelimit-used","140"),("Access-Control-Expose-Headers","ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset"),("Access-Control-Allow-Origin","*"),("Strict-Transport-Security","max-age=31536000; includeSubdomains; preload"),("X-Frame-Options","deny"),("X-Content-Type-Options","nosniff"),("X-XSS-Protection","1; mode=block"),("Referrer-Policy","origin-when-cross-origin, strict-origin-when-cross-origin"),("Content-Security-Policy","default-src 'none'"),("Vary","Accept-Encoding, Accept, X-Requested-With"),("Content-Encoding","gzip"),("X-GitHub-Request-Id","71A8:DE81:49FD4B:4EB158:60135E0F")], responseHttpVersion = HTTP/1.1, responseBody = "{\"message\":\"Not Found\",\"documentation_url\":\"https://docs.github.com/rest/reference/repos#list-repository-contributors\"}"})][]